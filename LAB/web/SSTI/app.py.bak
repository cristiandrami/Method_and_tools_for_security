import tornado.ioloop
import tornado.web
import os

class User:
    def __init__(self, name, first_name, nickname):
        self.name = name
        self.first_name = first_name
        self.nickname = nickname

class MainHandler(tornado.web.RequestHandler):
    def get(self):
        self.write("Hello, world")

class CommentHandler(tornado.web.RequestHandler):
    def post(self):
        comment = self.get_argument("comment")
        self.write("Comment posted: " + comment)

class AccountHandler(tornado.web.RequestHandler):
    def post(self):
        author_display = self.get_argument("blog-post-author-display", "user.name")
        user = User("Peter Wiener", "Peter", "wiener")
        # Simulating the template injection vulnerability
        rendered_name = tornado.template.Template(author_display).generate(user=user)
        self.write(rendered_name)

def make_app():
    return tornado.web.Application([
        (r"/", MainHandler),
        (r"/comment", CommentHandler),
        (r"/my-account/change-blog-post-author-display", AccountHandler),
    ])

if __name__ == "__main__":
    app = make_app()
    app.listen(8888)
    tornado.ioloop.IOLoop.current().start()


